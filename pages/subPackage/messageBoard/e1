#include <cstdio>
#include <cstring>
using namespace std;

void printSolution(int *a, int *p, int tot, int n)
{
    for (int i = 1;  i <= tot; i++)
        printf("%d ", a[p[i]]);
    printf("%d\n", a[n]);
}

void dfs(int *a, int c, int n, int i, int tot, int *p)
{
    if (i == 2) {
        p[1] = 0;
        printSolution(a, p, tot, n);
        ans ++;
        return ;
    }
    int y = f[n];
    for (int m = 0; m < n; m++) {
        int x = f[m];
        if (x == (y - 1) && (a[n] - a[m] <= c)) {
            p[i] = m;
            dfs(a, c, m, i - 1, tot, p);
        }
    }
}


void solve(int *a, int c, int n)
{
    int cnt = (a[n] + c - 1) / c; // including node 0
    int p[MAXN];
    p[cnt] = n;
    f[0] = 1;
    for (int i = 1; i <= n; i++)
    {
        for (int j = 0; j < i; ++j)
            if (a[i] - a[j] <= c) {
                f[i] = f[j] + 1;
                break;
        }
    }
    dfs(a, c, n, cnt - 1, cnt, p);

}
void init()
{
    scanf("%d%d", &n, &c);
    
}
int main()
{
    init();
    solve(a, c, n);
    return 0;
}